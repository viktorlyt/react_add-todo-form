{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","user1","preparedTodos","App","useState","setTodos","todoTitle","setTodoTitle","hasTitleError","setTitleError","hasUserIdError","setUserIdError","todoUserId","setTodoUserId","onSubmit","event","preventDefault","newTitle","newUserId","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5704bbf3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\nimport './userInfo.css';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user && (user.name)}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.css';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n    key={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport './TodoList.css';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer\n    .find(user1 => userId === user1.id);\n\n  return foundUser || null;\n};\n\nconst preparedTodos = [...todosFromServer].map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [todoTitle, setTodoTitle] = useState<string>('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserIdError, setUserIdError] = useState(false);\n  const [todoUserId, setTodoUserId] = useState(0);\n\n  const addTodo = (newTitle: string, newUserId: number): void => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title: newTitle,\n      userId: newUserId,\n      completed: false,\n      user: getUser(newUserId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!todoTitle);\n    setUserIdError(!todoUserId);\n\n    if (!todoTitle || !todoUserId) {\n      return;\n    }\n\n    addTodo(todoTitle, todoUserId);\n    setTodoTitle('');\n    setTodoUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"mainTitle\">Add todo form</h1>\n\n      <form\n        onSubmit={onSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={event => {\n              setTitleError(false);\n              setTodoTitle(event.target.value\n                .replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n            }}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            className=\"select\"\n            data-cy=\"userSelect\"\n            value={todoUserId}\n            onChange={event => {\n              setUserIdError(false);\n              setTodoUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" className=\"select\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}