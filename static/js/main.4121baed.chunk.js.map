{"version":3,"sources":["api/todos.ts","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","TodoInfo","todo","className","UserInfo","user","userFromServer","find","user1","TodoList","list","map","App","useState","todosFromServer","todos","setTodos","todoTitle","setTodoTitle","hasTitleError","setTitleError","hasUserIdError","setUserIdError","todoUserId","setTodoUserId","maxId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","currentTodos","type","placeholder","value","onChange","target","replace","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4121baed.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport './TodoInfo.css';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <ul className=\"todoUser list\">\n    <>\n      <p\n        className=\"todoTitle\"\n        data-cy=\"title\"\n        data-id={todo.id}\n      >\n        TASK:\n        {' '}\n        {todo.title}\n      </p>\n\n      <span className=\"todoCompleted\" data-cy=\"status\">\n        {todo.completed ? (\n          <p className=\"completed\">STATUS: COMPLETED</p>\n        ) : (\n          <p className=\"in_process\">STATUS: IN PROCESS</p>)}\n      </span>\n    </>\n  </ul>\n);\n","import React from 'react';\nimport { User } from '../../types/user';\nimport userFromServer from '../../api/users';\nimport './userInfo.css';\n\ntype Props = {\n  userId: number,\n};\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user: User | undefined = userFromServer\n    .find(user1 => userId === user1.id);\n\n  return (\n    <ul className=\"todoUser list\">\n      {user && (\n        <>\n          <p className=\"userName\" data-cy=\"username\">\n            {user.name}\n          </p>\n\n          <p className=\"userEmail\" data-cy=\"email\">\n            {user.email}\n          </p>\n        </>\n      )}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoList.css';\n\ntype Props = {\n  list: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ list }) => (\n  <ul className=\"preparedTodos_list\">\n    {list.map(todo => (\n      <div className=\"item\" key={todo.id}>\n        <li className=\"user__item\">\n          <UserInfo\n            userId={todo.userId}\n          />\n        </li>\n\n        <li className=\"todo__item\">\n          <TodoInfo\n            todo={todo}\n          />\n        </li>\n      </div>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [todoTitle, setTodoTitle] = useState<string>('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserIdError, setUserIdError] = useState(false);\n  const [todoUserId, setTodoUserId] = useState(0);\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title: todoTitle,\n      userId: todoUserId,\n      completed: false,\n    };\n\n    setTitleError(!todoTitle);\n    setUserIdError(!todoUserId);\n\n    if (!todoTitle || !todoUserId) {\n      return;\n    }\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n    setTodoTitle('');\n    setTodoUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"mainTitle\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={event => {\n              setTitleError(false);\n              setTodoTitle(event.target.value\n                .replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n            }}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            className=\"select\"\n            data-cy=\"userSelect\"\n            value={todoUserId}\n            onChange={event => {\n              setUserIdError(false);\n              setTodoUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" className=\"select\">\n          Add\n        </button>\n      </form>\n\n      <TodoList list={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}